{"version":3,"file":"static/js/116.4bfea4cd.chunk.js","mappings":"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","sources":["hooks/useResponsiveValue.js","components/AvatarUploader/AvatarUploader.jsx","routes/pages/SignIn/SignIn.jsx","components/LazyImage/LazyImage.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * useResponsiveValue({\r\n *   320: \"12.5rem\",\r\n *   480: \"14rem\",\r\n *   default: \"10rem\"\r\n * })\r\n */\r\nfunction useResponsiveValue(breakpoints) {\r\n  const [value, setValue] = useState(breakpoints.default);\r\n\r\n  useEffect(() => {\r\n    let timeoutId;\r\n\r\n    const handleResize = () => {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = setTimeout(() => {\r\n        // Iterate through breakpoints\r\n        for (const bp in breakpoints) {\r\n          if (bp !== \"default\" && window.innerWidth <= bp) {\r\n            setValue(breakpoints[bp]);\r\n            break;\r\n          } else if (bp === \"default\") {\r\n            setValue(breakpoints[bp]);\r\n            break;\r\n          }\r\n        }\r\n      }, 500);\r\n    };\r\n\r\n    handleResize(); // Set initial size based on current window width\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, [breakpoints]);\r\n\r\n  return value;\r\n}\r\n\r\nexport default useResponsiveValue;\r\n","import { useState, useRef } from \"react\";\r\nimport { useAvatar } from \"../../contexts/AvatarContext\";\r\nimport LazyImage from \"../LazyImage/LazyImage\";\r\nimport avatarImg from \"../../assets/images/avatar.png\";\r\nimport \"./AvatarUploader.css\";\r\n\r\nfunction validateFile(file) {\r\n  if (![\"image/jpeg\", \"image/png\"].includes(file.type)) {\r\n    return \"Only JPG or PNG are allowed\";\r\n  }\r\n  if (file.size > 1 * 1024 * 1024) {\r\n    return \"The file cannot be larger than 1MB\";\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction AvatarUploader({ className = \"\", size = \"10rem\" }) {\r\n  const { avatar, changeAvatar, removeAvatar } = useAvatar();\r\n  const [error, setError] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n  const avatarImgContainerRef = useRef(null);\r\n  let errorTimerId = useRef(null);\r\n\r\n  const handleImageClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    // Validate file type and size (max 1MB, only JPG/PNG)\r\n    const errorMsg = validateFile(file);\r\n    if (errorMsg) {\r\n      setError(errorMsg);\r\n      if (errorTimerId.current) clearTimeout(errorTimerId.current);\r\n      errorTimerId.current = setTimeout(() => {\r\n        setError(null);\r\n        errorTimerId.current = null;\r\n      }, 8000);\r\n      return;\r\n    }\r\n    setError(null);\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      changeAvatar(reader.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleImageRemove = () => {\r\n    removeAvatar();\r\n  };\r\n\r\n  const handleImageKeyDown = (e) => {\r\n    if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      handleImageClick();\r\n    }\r\n  };\r\n\r\n  const handleImgRemoveKeyDown = (e) => {\r\n    if (e.key === \"Enter\" || e.key === \" \") {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      handleImageRemove();\r\n      avatarImgContainerRef.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={className} style={{ width: size }}>\r\n        <div\r\n          className=\"avatar-img-container fancy-background\"\r\n          style={{ width: \"100%\", height: size }}\r\n          title=\"Click to change avatar\"\r\n          aria-label=\"Change avatar\"\r\n          role=\"button\"\r\n          aria-pressed={!!avatar}\r\n          tabIndex={0}\r\n          onClick={handleImageClick}\r\n          onKeyDown={handleImageKeyDown}\r\n          ref={avatarImgContainerRef}\r\n        >\r\n          <LazyImage\r\n            src={avatar || avatarImg}\r\n            style={{ lineHeight: size }}\r\n            alt=\"User Avatar\"\r\n          />\r\n          <div className=\"avatar-overlay\">\r\n            ðŸ“·{/* &#128247; */}\r\n            {avatar && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-text btn-effect-3d\"\r\n                aria-label=\"Remove avatar\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  handleImageRemove();\r\n                }}\r\n                onKeyDown={handleImgRemoveKeyDown}\r\n              >\r\n                &times;\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {error && <p role=\"alert\">{error}</p>}\r\n      </div>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/jpeg,image/png\"\r\n        ref={fileInputRef}\r\n        style={{ display: \"none\" }}\r\n        onChange={handleFileChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AvatarUploader;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport useResponsiveValue from \"../../../hooks/useResponsiveValue\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\nimport AvatarUploader from \"../../../components/AvatarUploader/AvatarUploader\";\r\nimport \"./SignIn.css\";\r\n\r\nfunction SignIn() {\r\n  console.log(\"SignIn render\");\r\n  const { userName, setUserName, setIsLoggedIn } = useAuth();\r\n  const navigate = useNavigate();\r\n  const avatarSize = useResponsiveValue({\r\n    320: \"12.5rem\",\r\n    480: \"14rem\",\r\n    default: \"10rem\",\r\n  });\r\n\r\n  function validateUserName(name) {\r\n    return name.length >= 4 && name.length <= 16;\r\n  }\r\n\r\n  function autorisizeUser() {\r\n    setIsLoggedIn(true);\r\n    navigate(\"/shop\");\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (validateUserName(userName)) {\r\n      autorisizeUser(userName);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"signin-container\">\r\n        <AvatarUploader className=\"avatar\" size={avatarSize} />\r\n        <form\r\n          className=\"fancy-background\"\r\n          action=\"#\"\r\n          method=\"post\"\r\n          onSubmit={(e) => {\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          <label htmlFor=\"user-name\">User name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            id=\"user-name\"\r\n            placeholder=\"Type your name\"\r\n            required\r\n            value={userName}\r\n            onChange={(e) => {\r\n              setUserName(e.target.value);\r\n            }}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn-effect-3d\"\r\n            disabled={!validateUserName(userName)}\r\n          >\r\n            Sign-in\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import { useState } from \"react\";\r\nimport \"./LazyImage.css\";\r\n\r\nfunction LazyImage({src, alt, className, ...otherProps}) {\r\n  const [isImgLoaded, setIsImgLoaded] = useState(false);\r\n  // console.log(\"Img render\");\r\n  return (\r\n    <>  \r\n        <img\r\n          src={src}\r\n          alt={alt}\r\n          {...otherProps}\r\n          className={`${className} lazy-img ${isImgLoaded ? \"loaded\" : \"\"}`}\r\n          onLoad={() => {\r\n            // console.log(\"Img loaded\");\r\n            setIsImgLoaded(true);\r\n          }}\r\n        />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LazyImage;"],"names":["breakpoints","value","setValue","useState","default","useEffect","timeoutId","handleResize","clearTimeout","setTimeout","bp","window","innerWidth","addEventListener","removeEventListener","_ref","className","size","avatar","changeAvatar","removeAvatar","useAvatar","error","setError","fileInputRef","useRef","avatarImgContainerRef","errorTimerId","handleImageClick","current","click","handleImageRemove","_jsxs","_Fragment","children","style","width","height","title","role","tabIndex","onClick","onKeyDown","e","key","preventDefault","stopPropagation","ref","_jsx","LazyImage","src","avatarImg","lineHeight","alt","type","focus","accept","display","onChange","file","target","files","errorMsg","includes","validateFile","reader","FileReader","onloadend","result","readAsDataURL","console","log","userName","setUserName","setIsLoggedIn","useAuth","navigate","useNavigate","avatarSize","useResponsiveValue","validateUserName","name","length","handleSubmit","AvatarUploader","action","method","onSubmit","htmlFor","id","placeholder","required","disabled","otherProps","isImgLoaded","setIsImgLoaded","onLoad"],"sourceRoot":""}